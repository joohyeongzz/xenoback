buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.daewon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.381'
//    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.12.5'
	// 테스트 환경에서 lombok 라이브러리를 쓰기위해 추가
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Querydsl 관련 라이브러리
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	)

	// swagger UI 설정
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// modelmapper 라이브러리 추가
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// Oauth2 인증,  소셜로그인 처리를 위한 프레임워크
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// 파일 처리를 위한 Thumbnailator 라이브러리 추가
	implementation 'net.coobird:thumbnailator:0.4.20'

	// 인증 정보 JSON 문자열 처리를 위한 gson 라이브러리
	implementation 'com.google.code.gson:gson:2.10.1'

	// jjwt 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5', 'io.jsonwebtoken:jjwt-jackson:0.12.5'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java","$projectDir/build/generated"]   // $projectDir은 현재 프로젝트를 의미함.
		}
	}
}

// compile 정리
compileJava.dependsOn('clean')
